{
  "contractName": "CryptoBridge",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fundraisings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "imghash",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "tipAmount",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "author",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "createFundRaising",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"createFundRaising\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fundraisings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"imghash\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"tipAmount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"author\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/fede/Documentos/Code/Solidity/Sin curso/CryptoBridge/cryptobridge/src/contracts/CryptoBridge.sol\":\"CryptoBridge\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/fede/Documentos/Code/Solidity/Sin curso/CryptoBridge/cryptobridge/src/contracts/CryptoBridge.sol\":{\"keccak256\":\"0x28d653303ab45d56f723635634b22edc10a57a1492eb8207d46eca7835464d56\",\"urls\":[\"bzz-raw://8b7f4887fc3ad7f28345a98555b14ed73084b8cfc8516a5d5b934a31436f9c6b\",\"dweb:/ipfs/Qmc8H2PmPq7h6nz4HYrM44azJexMfVP3Uv2mHGRfhChuJQ\"]}},\"version\":1}",
  "bytecode": "0x60806040526040518060400160405280600c81526020017f43727970746f42726964676500000000000000000000000000000000000000008152506000908051906020019061004f929190610062565b5034801561005c57600080fd5b50610107565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100a357805160ff19168380011785556100d1565b828001600101855582156100d1579182015b828111156100d05782518255916020019190600101906100b5565b5b5090506100de91906100e2565b5090565b61010491905b808211156101005760008160009055506001016100e8565b5090565b90565b61067d806101166000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde03146100465780631a76e3f9146100c95780636562c3c91461021d575b600080fd5b61004e610227565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561008e578082015181840152602081019050610073565b50505050905090810190601f1680156100bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100f5600480360360208110156100df57600080fd5b81019080803590602001909291905050506102c5565b6040518086815260200180602001806020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835287818151815260200191508051906020019080838360005b8381101561017757808201518184015260208101905061015c565b50505050905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b838110156101dd5780820151818401526020810190506101c2565b50505050905090810190601f16801561020a5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b61022561044b565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102bd5780601f10610292576101008083540402835291602001916102bd565b820191906000526020600020905b8154815290600101906020018083116102a057829003601f168201915b505050505081565b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103775780601f1061034c57610100808354040283529160200191610377565b820191906000526020600020905b81548152906001019060200180831161035a57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b6040518060a00160405280600181526020016040518060400160405280600681526020017f616263313233000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600d81526020017f48656c6c6f2c20776f726c642100000000000000000000000000000000000000815250815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600160006001815260200190815260200160002060008201518160000155602082015181600101908051906020019061052f9291906105a3565b50604082015181600201908051906020019061054c9291906105a3565b506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105e457805160ff1916838001178555610612565b82800160010185558215610612579182015b828111156106115782518255916020019190600101906105f6565b5b50905061061f9190610623565b5090565b61064591905b80821115610641576000816000905550600101610629565b5090565b9056fea265627a7a723158207b8fcaa7dc054d14e61b235faa05246bdd18a8c62839c57589870b066ba9099664736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806306fdde03146100465780631a76e3f9146100c95780636562c3c91461021d575b600080fd5b61004e610227565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561008e578082015181840152602081019050610073565b50505050905090810190601f1680156100bb5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6100f5600480360360208110156100df57600080fd5b81019080803590602001909291905050506102c5565b6040518086815260200180602001806020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838103835287818151815260200191508051906020019080838360005b8381101561017757808201518184015260208101905061015c565b50505050905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b838110156101dd5780820151818401526020810190506101c2565b50505050905090810190601f16801561020a5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390f35b61022561044b565b005b60008054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156102bd5780601f10610292576101008083540402835291602001916102bd565b820191906000526020600020905b8154815290600101906020018083116102a057829003601f168201915b505050505081565b6001602052806000526040600020600091509050806000015490806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103775780601f1061034c57610100808354040283529160200191610377565b820191906000526020600020905b81548152906001019060200180831161035a57829003601f168201915b505050505090806002018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104155780601f106103ea57610100808354040283529160200191610415565b820191906000526020600020905b8154815290600101906020018083116103f857829003601f168201915b5050505050908060030154908060040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905085565b6040518060a00160405280600181526020016040518060400160405280600681526020017f616263313233000000000000000000000000000000000000000000000000000081525081526020016040518060400160405280600d81526020017f48656c6c6f2c20776f726c642100000000000000000000000000000000000000815250815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815250600160006001815260200190815260200160002060008201518160000155602082015181600101908051906020019061052f9291906105a3565b50604082015181600201908051906020019061054c9291906105a3565b506060820151816003015560808201518160040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106105e457805160ff1916838001178555610612565b82800160010185558215610612579182015b828111156106115782518255916020019190600101906105f6565b5b50905061061f9190610623565b5090565b61064591905b80821115610641576000816000905550600101610629565b5090565b9056fea265627a7a723158207b8fcaa7dc054d14e61b235faa05246bdd18a8c62839c57589870b066ba9099664736f6c63430005100032",
  "sourceMap": "58:7759:0:-;;;117:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;58:7759;8:9:-1;5:2;;;30:1;27;20:12;5:2;58:7759:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "58:7759:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;58:7759:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;117:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;117:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;184:48;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;184:48:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;184:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;184:48:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;422:125;;;:::i;:::-;;117:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;184:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;422:125::-;486:54;;;;;;;;498:1;486:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;525:1;486:54;;;;535:3;486:54;;;;;468:12;:15;481:1;468:15;;;;;;;;;;;:72;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;422:125::o;58:7759::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.5.0;\n\n\ncontract CryptoBridge {\n\n    //DESCOMENTAR SEGUN CURSO\n    string public name = \"CryptoBridge\";\n\n    //Stores FundRaising\n    mapping(uint => FundRaising) public fundraisings;\n\n    struct FundRaising {\n        uint id;\n        string imghash;\n        string description;\n        uint tipAmount;\n        address payable author;\n    }\n\n    //Creates FundRaising\n    function createFundRaising() public {\n        fundraisings[1] = FundRaising(1,'abc123','Hello, world!',0,address(0x0));\n    }\n\n    /*\n    //STRUCTS\n    struct FundRaising {\n        address creator;\n        uint256 totalAmount;\n        uint256 amountToRetrieve;\n        uint256 donorCount;\n        bool isOpen;\n        string img;\n        mapping(uint256 => Donor) donors;\n    }\n    \n    struct Donor {\n        uint256 donorId;\n        uint256 amount;\n        string message;\n    }\n\n    struct User {\n        uint256 fundraisingCount;\n        mapping(uint256 => string) fundraisings;\n    }\n\n    uint256 private amountoffundraisings;\n\n    //Mappings\n    mapping(uint256 => string) private fundRaisingsList;\n    mapping(address => User) private userFundraisings;\n    mapping(string => FundRaising) private fundraisings;\n    mapping(string => bool) private fundraisingExist;\n\n    //Events\n    event FundRaisingCreated(string identification, string imgpath);\n    event DonationReceived(uint256 indexed donorId, string identification, uint256 amount, string message);\n    event FundsRetrieved(address indexed retriever, string identification, uint256 amount);\n  \n    //Functions\n    //Creates a fund raising associate to caster, is open by default.\n    function createFundRaising(string memory identification, string memory imgpath) public {\n        require(bytes(identification).length > 0, \"Identification should not be empty\");\n        require(fundraisingExist[identification] == false, \"There is already a fund raising with that identification\");\n        \n        userFundraisings[msg.sender].fundraisingCount ++;\n        uint256 fundraisingCount = userFundraisings[msg.sender].fundraisingCount;\n        userFundraisings[msg.sender].fundraisings[fundraisingCount] = identification;\n\n        fundraisings[identification].creator = msg.sender;\n        fundraisings[identification].totalAmount = 0;\n        fundraisings[identification].amountToRetrieve = 0;\n        fundraisings[identification].donorCount = 0;\n        fundraisings[identification].isOpen = true;\n        fundraisings[identification].img = imgpath;\n        fundraisingExist[identification] = true;\n\n        fundRaisingsList[amountoffundraisings] = identification;\n        amountoffundraisings++;\n\n        emit FundRaisingCreated(identification,imgpath);\n    }\n\n    //Opens the fund raising to enable it to receive donations\n    function openFundRaising(string memory identification) public  {\n        require(bytes(identification).length > 0, \"Identification should not be empty\");\n        require(msg.sender == fundraisings[identification].creator, \"Only the creator can open a fund raising\");\n        require(!fundraisings[identification].isOpen, \"Fund raising already open\");\n        fundraisings[identification].isOpen = true;\n    }\n\n    //Close the fund raising to disable it to receive donations. It can be reopened.\n    function closeFundRaising(string memory identification) public  {\n        require(bytes(identification).length > 0, \"Identification should not be empty\");\n        require(msg.sender == fundraisings[identification].creator, \"Only the creator can close a fund raising\");\n        require(fundraisings[identification].isOpen, \"Fund raising already closed\");\n        fundraisings[identification].isOpen = false;\n    }\n\n    //Donates to the fundraising [identification] an amount set in VALUE. \n    //In [message], a message can be left with the donation.\n    function donate(string memory identification, string memory message) public payable {\n        require(msg.value > 0, \"Donation amount should be greater than zero\");\n        require(bytes(identification).length > 0, \"Identification should not be empty\");\n        require(fundraisings[identification].isOpen, \"Fundraising is closed\");\n\n        FundRaising storage fundraising = fundraisings[identification];\n        uint256 donorId = fundraising.donorCount + 1;\n        fundraising.donors[donorId].donorId = donorId;\n        fundraising.donors[donorId].amount = msg.value;\n        fundraisings[identification].totalAmount += msg.value;\n        fundraisings[identification].amountToRetrieve += msg.value;\n        fundraising.donors[donorId].message = message;\n        fundraising.donorCount++;\n\n        emit DonationReceived(donorId, identification, msg.value, message);\n    }\n    \n    //Returns the amount of fund raisings stored in the contract.\n    function getAmountOfFundRaisings() public view returns (uint256) {\n        return (amountoffundraisings);\n    }\n\n    //Returns the amount of fund raisings associated to my account.\n    function getAmountOfMyFundRaisings() public view returns (uint256) {\n        return (userFundraisings[msg.sender].fundraisingCount);\n    }\n\n    //From 1 to the amount of fund raisings associated to the account, \n    //returns the name of the fundraise and the amount of funds to retrieve\n    function getNameOfMyFundRaise(uint256 fundraiseid) public view returns (string memory, uint256) {\n        require(fundraiseid > 0, \"Fund raise id should not be empty\");\n        return (userFundraisings[msg.sender].fundraisings[fundraiseid], fundraisings[userFundraisings[msg.sender].fundraisings[fundraiseid]].amountToRetrieve);\n    }\n\n    //From 1 to the amount of all fund raisings, \n    //returns the name of the fundraise and the amount of funds to retrieve\n    function getNameOfFundRaise(uint256 fundraiseid) public view returns (string memory) {\n        require(fundraiseid > 0, \"Fund raise id should not be empty\");\n        return (fundRaisingsList[fundraiseid]);\n    }\n\n    //given the name of any fund raising, it returns the amount of donors, \n    //the total amount of tokens donated and if it's open\n    function getFundRaising(string memory identification) public view returns (uint256, uint256, bool) {\n        require(bytes(identification).length > 0, \"Identification should not be empty\");\n        FundRaising storage fundraising = fundraisings[identification];\n        return (fundraising.totalAmount,fundraising.donorCount,fundraising.isOpen);\n    }\n\n    //Given a fund raising and a number of donor, it returns the amount donated and the message left\n    function getDonor(string memory identification, uint256 donorId) public view returns (uint256, string memory, uint256) {\n        require(bytes(identification).length > 0, \"Identification should not be empty\");\n        \n        FundRaising storage fundraising = fundraisings[identification];\n        return (fundraising.donors[donorId].donorId, fundraising.donors[donorId].message, fundraising.donors[donorId].amount);\n    }\n    \n    //Given the name of a fundraising (created by the account that queries,\n    //it withdraws the pending tokens stored in the contract. Balances are updated\n    function withdrawFunds(string memory identification) public {\n        require(bytes(identification).length > 0, \"Identification should not be empty\");\n        require(msg.sender == fundraisings[identification].creator, \"Only the creator can retrieve funds\");\n        require(fundraisings[identification].amountToRetrieve > 0 ,\"There's no funds to retrieve\");\n\n        uint256 amount = fundraisings[identification].amountToRetrieve;\n\n        address payable owner = msg.sender;\n\n        owner.transfer(amount); \n        fundraisings[identification].amountToRetrieve = 0;\n\n        emit FundsRetrieved(msg.sender, identification, amount);\n\n        \n    }\n    */\n}\n\n",
  "sourcePath": "/home/fede/Documentos/Code/Solidity/Sin curso/CryptoBridge/cryptobridge/src/contracts/CryptoBridge.sol",
  "ast": {
    "absolutePath": "/home/fede/Documentos/Code/Solidity/Sin curso/CryptoBridge/cryptobridge/src/contracts/CryptoBridge.sol",
    "exportedSymbols": {
      "CryptoBridge": [
        38
      ]
    },
    "id": 39,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 38,
        "linearizedBaseContracts": [
          38
        ],
        "name": "CryptoBridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 38,
            "src": "117:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "117:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "43727970746f427269646765",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "138:14:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_64069f9f929f5a4d9f7966412f747f30ce4745504db6953619db2a834d0e85cc",
                "typeString": "literal_string \"CryptoBridge\""
              },
              "value": "CryptoBridge"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "fundraisings",
            "nodeType": "VariableDeclaration",
            "scope": 38,
            "src": "184:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FundRaising_$19_storage_$",
              "typeString": "mapping(uint256 => struct CryptoBridge.FundRaising)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "192:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "184:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FundRaising_$19_storage_$",
                "typeString": "mapping(uint256 => struct CryptoBridge.FundRaising)"
              },
              "valueType": {
                "contractScope": null,
                "id": 6,
                "name": "FundRaising",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 19,
                "src": "200:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FundRaising_$19_storage_ptr",
                  "typeString": "struct CryptoBridge.FundRaising"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CryptoBridge.FundRaising",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 10,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "268:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "268:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "imghash",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "285:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "285:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "309:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 13,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "309:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "tipAmount",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "337:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "337:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "name": "author",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "361:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 17,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "361:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "FundRaising",
            "nodeType": "StructDefinition",
            "scope": 38,
            "src": "239:151:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "458:89:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 22,
                        "name": "fundraisings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "468:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FundRaising_$19_storage_$",
                          "typeString": "mapping(uint256 => struct CryptoBridge.FundRaising storage ref)"
                        }
                      },
                      "id": 24,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "481:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "468:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FundRaising_$19_storage",
                        "typeString": "struct CryptoBridge.FundRaising storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "498:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "616263313233",
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "500:8:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_719accc61a9cc126830e5906f9d672d06eab6f8597287095a2c55a8b775e7016",
                            "typeString": "literal_string \"abc123\""
                          },
                          "value": "abc123"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "48656c6c6f2c20776f726c6421",
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "509:15:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b6e16d27ac5ab427a7f68900ac5559ce272dc6c37c82b3e052246c82244c50e4",
                            "typeString": "literal_string \"Hello, world!\""
                          },
                          "value": "Hello, world!"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "525:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 31,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "535:3:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 30,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "527:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "527:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_719accc61a9cc126830e5906f9d672d06eab6f8597287095a2c55a8b775e7016",
                            "typeString": "literal_string \"abc123\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b6e16d27ac5ab427a7f68900ac5559ce272dc6c37c82b3e052246c82244c50e4",
                            "typeString": "literal_string \"Hello, world!\""
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 25,
                        "name": "FundRaising",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "486:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FundRaising_$19_storage_ptr_$",
                          "typeString": "type(struct CryptoBridge.FundRaising storage pointer)"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "486:54:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FundRaising_$19_memory",
                        "typeString": "struct CryptoBridge.FundRaising memory"
                      }
                    },
                    "src": "468:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FundRaising_$19_storage",
                      "typeString": "struct CryptoBridge.FundRaising storage ref"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "468:72:0"
                }
              ]
            },
            "documentation": null,
            "id": 37,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFundRaising",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:0"
            },
            "scope": 38,
            "src": "422:125:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 39,
        "src": "58:7759:0"
      }
    ],
    "src": "32:7787:0"
  },
  "legacyAST": {
    "absolutePath": "/home/fede/Documentos/Code/Solidity/Sin curso/CryptoBridge/cryptobridge/src/contracts/CryptoBridge.sol",
    "exportedSymbols": {
      "CryptoBridge": [
        38
      ]
    },
    "id": 39,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 38,
        "linearizedBaseContracts": [
          38
        ],
        "name": "CryptoBridge",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 4,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 38,
            "src": "117:35:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 2,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "117:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "43727970746f427269646765",
              "id": 3,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "138:14:0",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_64069f9f929f5a4d9f7966412f747f30ce4745504db6953619db2a834d0e85cc",
                "typeString": "literal_string \"CryptoBridge\""
              },
              "value": "CryptoBridge"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 8,
            "name": "fundraisings",
            "nodeType": "VariableDeclaration",
            "scope": 38,
            "src": "184:48:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FundRaising_$19_storage_$",
              "typeString": "mapping(uint256 => struct CryptoBridge.FundRaising)"
            },
            "typeName": {
              "id": 7,
              "keyType": {
                "id": 5,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "192:4:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "184:28:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FundRaising_$19_storage_$",
                "typeString": "mapping(uint256 => struct CryptoBridge.FundRaising)"
              },
              "valueType": {
                "contractScope": null,
                "id": 6,
                "name": "FundRaising",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 19,
                "src": "200:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FundRaising_$19_storage_ptr",
                  "typeString": "struct CryptoBridge.FundRaising"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "canonicalName": "CryptoBridge.FundRaising",
            "id": 19,
            "members": [
              {
                "constant": false,
                "id": 10,
                "name": "id",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "268:7:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 9,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "268:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 12,
                "name": "imghash",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "285:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 11,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "285:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 14,
                "name": "description",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "309:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 13,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "309:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 16,
                "name": "tipAmount",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "337:14:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 15,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "337:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 18,
                "name": "author",
                "nodeType": "VariableDeclaration",
                "scope": 19,
                "src": "361:22:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 17,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "361:15:0",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "FundRaising",
            "nodeType": "StructDefinition",
            "scope": 38,
            "src": "239:151:0",
            "visibility": "public"
          },
          {
            "body": {
              "id": 36,
              "nodeType": "Block",
              "src": "458:89:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 22,
                        "name": "fundraisings",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "468:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_FundRaising_$19_storage_$",
                          "typeString": "mapping(uint256 => struct CryptoBridge.FundRaising storage ref)"
                        }
                      },
                      "id": 24,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 23,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "481:1:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "468:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FundRaising_$19_storage",
                        "typeString": "struct CryptoBridge.FundRaising storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 26,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "498:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "616263313233",
                          "id": 27,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "500:8:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_719accc61a9cc126830e5906f9d672d06eab6f8597287095a2c55a8b775e7016",
                            "typeString": "literal_string \"abc123\""
                          },
                          "value": "abc123"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "48656c6c6f2c20776f726c6421",
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "509:15:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b6e16d27ac5ab427a7f68900ac5559ce272dc6c37c82b3e052246c82244c50e4",
                            "typeString": "literal_string \"Hello, world!\""
                          },
                          "value": "Hello, world!"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 29,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "525:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "307830",
                              "id": 31,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "535:3:0",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 30,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "527:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 32,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "527:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_719accc61a9cc126830e5906f9d672d06eab6f8597287095a2c55a8b775e7016",
                            "typeString": "literal_string \"abc123\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b6e16d27ac5ab427a7f68900ac5559ce272dc6c37c82b3e052246c82244c50e4",
                            "typeString": "literal_string \"Hello, world!\""
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 25,
                        "name": "FundRaising",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19,
                        "src": "486:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_FundRaising_$19_storage_ptr_$",
                          "typeString": "type(struct CryptoBridge.FundRaising storage pointer)"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "486:54:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FundRaising_$19_memory",
                        "typeString": "struct CryptoBridge.FundRaising memory"
                      }
                    },
                    "src": "468:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FundRaising_$19_storage",
                      "typeString": "struct CryptoBridge.FundRaising storage ref"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "468:72:0"
                }
              ]
            },
            "documentation": null,
            "id": 37,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createFundRaising",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "448:2:0"
            },
            "returnParameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "458:0:0"
            },
            "scope": 38,
            "src": "422:125:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 39,
        "src": "58:7759:0"
      }
    ],
    "src": "32:7787:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0xb18becd5c4053355c119c6fbf7aae3e0747642f93ae871c70cb2c16001d1fe31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "donorId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "identification",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "name": "DonationReceived",
          "type": "event"
        },
        "0x9118177b495e2be0cc49332c54361e35a719c83a2e56fafab48dff763d8ed013": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "string",
              "name": "identification",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "imgpath",
              "type": "string"
            }
          ],
          "name": "FundRaisingCreated",
          "type": "event"
        },
        "0x949fa8c23075761d583703ca2157d38536172f536f30113854026c25ba3e2e9e": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "retriever",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "identification",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "FundsRetrieved",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x54334336ffbe17070B92Bdc14C3e38A3b52B3B44",
      "transactionHash": "0x1e33d52e14e27bf0f1958a7e7a00c7a1289a0fcbc459233e6847b9cd31a00c09"
    }
  },
  "schemaVersion": "3.2.3",
  "updatedAt": "2023-07-30T03:54:06.809Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}